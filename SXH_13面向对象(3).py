# #  多态
# class 复仇者联盟(object):
#     def 实例方法(self): # 定义父类，并提供公共方法
#         print('打灭霸')
#
# class 美国队长(复仇者联盟):
#     def 实例方法(self): #子类重写父类同名的方法
#         print('空中作战')
#
# class 钢铁侠(复仇者联盟):
#     def 实例方法(self): #子类重写父类同名的方法
#         print('地面作战')
#
# #传入不同的对象，执行不同的代码，即不同的实例方法函数
# class 神盾局(object):
#     def 指挥_实例方法(self,复仇者联盟):
#         复仇者联盟.实例方法()
#
# 帮派1 = 钢铁侠()
# 帮派2 = 美国队长()
#
# 对象 = 神盾局()
# 对象.指挥_实例方法(帮派1)
# 对象.指挥_实例方法(帮派2)



# #定义类：定义类属性
# class 圣斗士():
#     守护神 = '雅典娜'
# #创建对象
# 黄金圣斗士 = 圣斗士()
# 青铜圣斗士 = 圣斗士()
#
# #访问类属性：类和对象
# #1.通过类访问
# print(圣斗士.守护神)
# #2.通过访问类属性
# print(黄金圣斗士.守护神)
# print(青铜圣斗士.守护神)




# class 圣斗士():
#     守护神 = '雅典娜'
#
# 黄金圣斗士 = 圣斗士()
# 青铜圣斗士 = 圣斗士()
# #修改类属性
# 圣斗士.守护神 = '哈迪斯'  #只能通过类对象进行修改，不要使用实例修改
# print(圣斗士.守护神)
# print(黄金圣斗士.守护神)
# print(青铜圣斗士.守护神)


# class 圣斗士():
#     守护神 = '雅典娜'
#
# 黄金圣斗士 = 圣斗士()
# 青铜圣斗士 = 圣斗士()
# #修改类属性
# 黄金圣斗士.守护神 = '哈迪斯'  #只能通过类对象进行修改，不要使用实例修改，与上一个对比
# print(圣斗士.守护神)
# print(黄金圣斗士.守护神)
# print(青铜圣斗士.守护神)



# 面型对象  类方法
# class 圣斗士():
#     __武器 = '天秤座黄金圣衣'  #私有属性
#
#     @classmethod #语法糖  装饰器
#     def get_武器(cls):
#         return cls.__武器
#
# 黄金圣斗士 = 圣斗士()
#
# print(黄金圣斗士.get_武器())

#面向对象 静态方法
class 圣斗士(object):

    @staticmethod
    def 静态方法():
        print('同样的招式对圣斗士只能使用一次')

对象 = 圣斗士()
圣斗士.静态方法()
对象.静态方法()

# #静态属性
#     @property
#     def 静态(self):
#         print('123')
# 对象= 圣斗士()
# 对象.静态





















