# class 类名():
#         #__init__( )方法的作用：初始化对象
#     def __init__(self,name,age):
#         # 添加实例属性
#         self.name = name
#         self.age = age
#
#     def 实例方法(self):
#         print(f'我的姓名是{self.name},年龄是{self.age}岁')
#
# 对象1 = 类名('李中涛',20)
# 对象1.实例方法()
#
# 对象2 = 类名('赵丽颖',33)
# 对象2.实例方法()
#
# 对象3 = 类名('李小龙',80)
# 对象2.实例方法()


# class 月饼():
#     def __init__(self):
#         #焙烤的时间
#         self.时间 = 0
#         #烤的状态
#         self.状态 = '生的'
#         #调料列表
#         self.调料 = []
#     def 烘焙时间(self,时间):
#         #1.计算月饼整体被烤过的时间
#         self.时间 += 时间
#         #2.用整体烤过的时间再判断
#         if 0 <= self.时间 < 3:
#             self.状态 = '生的'
#         elif 3 <= self.时间 <5:
#             self.状态 = '半生不熟'
#         elif 5 <= self.时间 < 8:
#             self.状态 = '熟了'
#         else:
#             self.状态 = '糊了'
#     def 添加调料(self,调料):
#         self.调料.extend(调料)
#     #书写str魔法方法，用于输出对象状态
#     def __str__(self):
#         return  f'这批月饼被烤过的时间是{self.时间}分钟,状态是{self.状态},用的调料是{self.调料}'
#
# 对象名 = 月饼()
# 对象名.烘焙时间(2)
# 对象名.添加调料(['蔓越莓','豆沙'])
# print(对象名)
#
# 对象名.烘焙时间(4)
# 对象名.添加调料(['蛋黄','蛋液'])
# print(对象名)


# #自己练习
# class 考研():
#     def __init__(self):
#         self.时间 = 0
#         self.状态 = '一般'
#         self.科目 = []
#
#     def 复习时间(self,时间):
#         self.时间 += 时间
#         if 0 <= self.时间 <5:
#             self.状态 = '一般'
#         elif 5 <= self.时间 <8:
#             self.状态 = '良好'
#         elif 8 <= self.时间 <10:
#             self.状态 = '优秀'
#         else:
#             self.状态 = '你必上岸'
#
#     def 学习科目(self,科目):
#         self.科目.extend(科目)
#
#     def __str__(self):
#         return f'您今天学习的时间为{self.时间}小时,您的学习效果为{self.状态},今天学了{self.科目}'
#
# 考研1 = 考研()
# 考研1.复习时间(3)
# 考研1.学习科目(['数学三'])
# 考研1.复习时间(3)
# 考研1.学习科目(['英语二'])
# 考研1.复习时间(2)
# 考研1.学习科目(['统计学'])
# 考研1.复习时间(2)
# 考研1.学习科目(['政治'])
# print(考研1)














































































